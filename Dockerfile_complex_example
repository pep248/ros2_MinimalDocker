# This is an auto generated Dockerfile for ros:ros-base
# generated from docker_images_ros2/create_ros_image.Dockerfile.em
FROM ros:humble-ros-base-jammy

ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# Define parameters
ARG ROS_VERSION=humble

ENV ROS_DISTRO=${ROS_VERSION}
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}
ENV ROS_WS=/home/ros2_ws
ENV ROS_PYTHON_VERSION=3

# install common ubuntu dependencies
RUN apt-get update && apt install -y -f\
    build-essential \
    cmake \
    git \
    iputils-ping \
    #python
    libpython3-dev \
    python3-colcon-common-extensions \
    python3-flake8 \
    python3-pip \
    python3-numpy \
    python3-pytest-cov \
    python3-rosdep \
    python3-setuptools \
    python3-vcstool \
    python3-rosinstall-generator

    
RUN python3 -m pip install -U --no-cache-dir \
    numpy

# install ros2 packages
RUN apt-get update && apt-get install -y \
    ros-humble-rviz2 && \
    rm -rf /var/lib/apt/lists/*


# RUN apt-get install ros-$ROS_DISTRO-demo-nodes-py -y
# Create folders
RUN cd /home && \
    mkdir -p ${ROS_WS}/src

WORKDIR ${ROS_WS}

# RUN cd ${ROS_WS}/src && \
#     git clone https://github.com/IntelRealSense/realsense-ros.git -b ros2-development

RUN cd ${ROS_WS}/src && \
    rosdep init && \
    rosdep update

RUN cd ${ROS_WS}/src && \
    rosinstall_generator --deps --rosdistro ${ROS_DISTRO} ros_base \
    # install the deps from the source directory in case there's any
    # $(rosdep keys --from-path ${ROS_WS}/src) > deps.rosinstall && \ 
    realsense2_camera > deps.rosinstall && \ 
    vcs import < deps.rosinstall

RUN cd ${ROS_WS}/src && \ 
    rosdep install -y -i --from-paths ${ROS_WS}/src --rosdistro ${ROS_DISTRO} -y

RUN cd ${ROS_WS} && \ 
    colcon build --merge-install --cmake-args -DCMAKE_BUILD_TYPE=Release

# RUN chmod +x ros_entrypoint.sh (not working)
COPY ./ros_entrypoint.sh ./
RUN chmod 755 ros_entrypoint.sh
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]











# RUN apt-get update && apt install -y -f\
#     build-essential \
#     cmake \
#     git \
#     # doxygen \
#     # #boost
#     # libboost-all-dev \
#     # #eigen
#     # libeigen3-dev \
#     # libopencv \
#     # libopencv-dev \
#     #python
#     libpython3-dev \
#     python3-colcon-common-extensions \
#     python3-flake8 \
#     python3-pip \
#     python3-numpy \
#     python3-pytest-cov \
#     python3-rosdep \
#     python3-setuptools \
#     python3-vcstool \
#     python3-rosinstall-generator
#     #open dynamics engine
#     # libode8
    
# RUN python3 -m pip install -U --no-cache-dir \
#     #Py++
#     # pygccxml \
#     # pyplusplus \
#     #pytest
#     "pytest>=5.3" \
#     pytest-repeat \
#     pytest-rerunfailures

# RUN apt-get -o Dpkg::Options::="--force-overwrite" install -y libopencv-dev

# RUN apt-get update && apt install -y -f\
#     libopencv-dev

# RUN apt-get update && apt install -y -f\
#     ros-humble-librealsense2*

# # RUN  mkdir -p /etc/apt/keyrings \
# #      curl -sSf https://librealsense.intel.com/Debian/librealsense.pgp | sudo tee /etc/apt/keyrings/librealsense.pgp > /dev/null

# # RUN echo "deb [signed-by=/etc/apt/keyrings/librealsense.pgp] https://librealsense.intel.com/Debian/apt-repo `lsb_release -cs` main" | \
# #     tee /etc/apt/sources.list.d/librealsense.list && \
# #     apt-get update

# # RUN apt-get install librealsense2-dkms && \
# #     apt-get install librealsense2-utils

# # RUN apt-get install librealsense2-dev && \
# #     apt-get install librealsense2-dbg




# ENV ROS_DISTRO humble

# # install dependencies
# RUN apt-get update && apt-get install -y -f \
#         ros-humble-librealsense2*



# # RUN apt-get install ros-$ROS_DISTRO-demo-nodes-py -y
# # Create folders
# RUN cd /home && \
#     mkdir -p ${ROS_WS}/src

# WORKDIR ${ROS_WS}

# # RUN cd ${ROS_WS}/src && \
# #     git clone https://github.com/IntelRealSense/realsense-ros.git -b ros2-development

# RUN cd ${ROS_WS}/src && \
#     rosdep init && \
#     rosdep update

# RUN cd ${ROS_WS}/src && \
#     rosinstall_generator --deps --rosdistro ${ROS_DISTRO} ros_base \
#     # install the deps from the source directory in case there's any
#     # $(rosdep keys --from-path ${ROS_WS}/src) > deps.rosinstall && \ 
#     realsense2_camera > deps.rosinstall && \ 
#     vcs import < deps.rosinstall

# ARG DEBIAN_FRONTEND=noninteractive
# RUN RTI_NC_LICENSE_ACCEPTED=yes apt-get install rti-connext-dds-6.0.1

# RUN cd ${ROS_WS}/src && \ 
#     rosdep install -y -i --from-paths ${ROS_WS}/src --rosdistro ${ROS_DISTRO}
#     #rosdep install -y -i --from-paths ${ROS_WS}/src --rosdistro ${ROS_DISTRO} --skip-keys=librealsense2 -y
   
# RUN cd ${ROS_WS} && \ 
#     colcon build --merge-install --cmake-args -DCMAKE_BUILD_TYPE=Release

# # RUN chmod +x ros_entrypoint.sh (not working)
# COPY ./ros_entrypoint.sh ./
# RUN chmod 755 ros_entrypoint.sh
# ENTRYPOINT ["/ros_entrypoint.sh"]
# CMD ["bash"]



